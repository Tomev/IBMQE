// gate = U1Gate(2 * np.pi * (1 / 2 + 1 / 8)), num_approximation_bits = 3, initial_amplitudes = [([0], [0, 1])], min_success_probability=None
// Initial qubit mapping (logical to physical): 0 -> 0, 1 -> 1, 3 -> 2, 2 -> 3
// Final qubit mapping (logical to physical): 0 -> 0, 1 -> 1, 2 -> 2, 3 -> 3
OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg c0[3];
u3(1.5707963267948961,-4.71238898038469,3.141592653589793) q[0];
u2(0.0,3.141592653589793) q[1];
u2(1.5707963267948966,-1.5707963267948972) q[2];
cx q[0],q[2];
u3(3.1415926535897927,0.1699184547270609,4.88230743511175) q[0];
u3(1.570796326794897,-3.5342917352885186,-1.5707963267948966) q[2];
cx q[0],q[2];
u2(3.141592653589793,-5.105088062083413) q[0];
u3(1.570796326794896,4.71238898038469,-1.9634954084936191) q[2];
cx q[1],q[2];
u3(3.1415926535897927,0.1699184547270609,4.88230743511175) q[1];
u3(1.570796326794897,-3.9269908169872414,-1.5707963267948968) q[2];
cx q[1],q[2];
u3(1.570796326794897,3.141592653589793,3.9269908169872423) q[1];
u3(3.141592653589793,0.0,-1.2934937712803953) q[2];
u3(1.0627007189119504,1.5707963267948966,1.570796326794897) q[3];
cx q[3],q[2];
u3(1.5707963267948968,-3.141592653589793,1.5707963267948963) q[2];
u3(1.5707963267948961,-1.5707963267948968,-2.220446049250313e-16) q[3];
cx q[3],q[2];
u3(1.9219886200371556,0.37511576311525063,3.994311274215204) q[2];
cx q[1],q[2];
u3(-0.7853981633974483,1.5707963267948966,4.71238898038469) q[1];
cx q[1],q[2];
u3(1.0471975511965979,-0.6154797086703875,2.5261129449194057) q[1];
u3(0.39269908169872414,1.5707963267948966,4.71238898038469) q[2];
cx q[0],q[2];
u3(-0.39269908169872414,1.5707963267948966,4.71238898038469) q[0];
cx q[0],q[2];
u3(0.39269908169872414,1.5707963267948966,4.71238898038469) q[0];
cx q[0],q[1];
u3(-0.7853981633974483,1.5707963267948966,4.71238898038469) q[0];
cx q[0],q[1];
u3(0.7853981633974483,1.5707963267948966,4.71238898038469) q[0];
u2(0.0,3.141592653589793) q[1];
u2(0.0,3.141592653589793) q[2];
barrier q[1],q[2],q[0];
u3(1.570796326794897,3.6496882614727397,4.71238898038469) q[3];
measure q[0] -> c0[0];
measure q[1] -> c0[1];
measure q[2] -> c0[2];
